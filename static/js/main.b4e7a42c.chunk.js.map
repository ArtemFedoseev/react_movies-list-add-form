{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/TextInput/TextInput.tsx","components/TextAreaInput/TextAreaInput.tsx","components/NewMovie/NewMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","imdbId","TextInput","fieldId","fieldName","fieldValue","labelText","onInputChange","validateField","onSetSpecialValue","error","isLink","specialValue","htmlFor","type","onClick","id","name","classNames","onChange","value","onBlur","defaultProps","FieldNames","TextAreaInput","defaultState","errors","NewMovie","state","handleInputChange","event","target","setState","setSpecialValue","field","validateTextInput","valueWithoutSpaces","replace","validateLink","valueIsNotLink","match","isFormComplete","hasEmptyFields","Object","values","filter","some","hasErrors","this","props","onAdd","disabled","Component","App","moviesFromServer","addMovie","React","ReactDOM","render","document","getElementById"],"mappings":"syEAKaA,EAA6B,SAAC,GAAD,IACxCC,EADwC,EACxCA,MAAOC,EADiC,EACjCA,YAAaC,EADoB,EACpBA,OAAQC,EADY,EACZA,QADY,OAGxC,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKH,EACLI,IAAI,kBAIV,sBAAKF,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJC,IAAI,aAIV,qBAAKF,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BJ,SAI/B,sBAAKI,UAAU,UAAf,UACGH,EACD,uBACA,mBAAGM,KAAMJ,EAAT,4BC1BKK,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKL,UAAU,SAAf,SACGK,EAAOC,KAAI,SAAAC,GAAK,OACf,cAAC,EAAD,eAAkCA,GAAlBA,EAAMC,c,+BCMfC,EAA6B,SAAC,GAWpC,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,UACAC,EAQI,EARJA,WACAC,EAOI,EAPJA,UACAC,EAMI,EANJA,cACAC,EAKI,EALJA,cACAC,EAII,EAJJA,kBACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,OAEI,IADJC,oBACI,MADW,GACX,EACJ,OACE,wBACEC,QAASV,EACTV,UAAU,cAFZ,UAIE,sBAAMA,UAAU,mBAAhB,SACGa,IAEFK,GACC,wBACEG,KAAK,SACLC,QAAS,WACPN,EAAkBL,EAAWQ,IAHjC,iCASF,uBACEI,GAAIb,EACJW,KAAK,OACLG,KAAMb,EACNX,UAAWyB,IACT,oBACA,CAAE,6BAA8BR,IAElCS,SAAUZ,EACVa,MAAOf,EACPgB,OAAQb,IAEV,uBACCG,EACID,GAAS,iBACTA,GAAS,qBAKpBR,EAAUoB,aAAe,CACvBV,aAAc,ICxDT,ICUFW,EDVQC,EAAiC,SAAC,GAQxC,IAPLrB,EAOI,EAPJA,QACAC,EAMI,EANJA,UACAC,EAKI,EALJA,WACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,cACAE,EACI,EADJA,MAEA,OACE,wBACEG,QAASV,EACTV,UAAU,cAFZ,UAIE,sBAAMA,UAAU,mBAAhB,SACGa,IAEH,0BACEU,GAAIb,EACJc,KAAMb,EACNX,UAAWyB,IACT,oBACA,CAAE,6BAA8BR,IAElCU,MAAOf,EACPc,SAAUZ,EACVc,OAAQb,IAEV,uBACCE,GAAS,sB,SCnBXa,K,cAAAA,E,0BAAAA,E,gBAAAA,E,kBAAAA,E,iBAAAA,M,KAQL,IAGME,EAAe,CACnBpC,MAAO,GACPC,YAAa,GACbC,OAAQ,GACRC,QAAS,GACTS,OAAQ,GACRyB,OAAQ,CACNrC,OAAO,EACPC,aAAa,EACbC,QAAQ,EACRC,SAAS,EACTS,QAAQ,IAIC0B,EAAb,4MACEC,MAAeH,EADjB,EAGEI,kBAAoB,SAACC,GACnB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KAAMG,EAAd,EAAcA,MAEd,EAAKY,UAAS,SAAAJ,GACZ,OAAO,2BACFA,GADL,kBAEGX,EAAOG,QAThB,EAcEa,gBAAkB,SAACC,EAAed,GAChC,EAAKY,UAAS,SAAAJ,GAAK,wCACdA,GADc,uBAEhBM,EAAQd,GAFQ,kDAIZQ,EAAMF,QAJM,kBAKdQ,GAAQ,KALM,QAfvB,EAyBEC,kBAAoB,SAACL,GACnB,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KACFmB,EADN,EAAchB,MACmBiB,QAAQ,MAAO,IAEhD,EAAKL,UAAS,SAAAJ,GACZ,OAAO,2BACFA,GADL,IAEEF,OAAO,2BACFE,EAAMF,QADL,kBAEHT,EAA8B,KAAvBmB,UAlClB,EAwCEE,aAAe,SAACR,GACd,MAAwBA,EAAMC,OAAtBd,EAAR,EAAQA,KACFsB,GADN,EAAcnB,MACgBoB,MAAM,sKAEpC,EAAKR,UAAS,SAAAJ,GACZ,OAAO,2BACFA,GADL,IAEEF,OAAO,2BACFE,EAAMF,QADL,kBAEHT,EAAOsB,UAjDlB,EAuDEE,eAAiB,WACf,IACMC,EADSC,OAAOC,OAAO,EAAKhB,OAAOiB,QAAO,SAAAzB,GAAK,MAAqB,kBAAVA,KAClC0B,MAAK,SAAAZ,GAAK,MAAc,KAAVA,KACtCa,EAAYJ,OAAOC,OAAO,EAAKhB,MAAMF,QAAQoB,MAAK,SAAApC,GAAK,OAAIA,KAEjE,OAAOgC,GAAkBK,GA5D7B,4CA+DE,WAAU,IAAD,OACP,EAOIC,KAAKpB,MANPvC,EADF,EACEA,MACAC,EAFF,EAEEA,YACAC,EAHF,EAGEA,OACAC,EAJF,EAIEA,QACAS,EALF,EAKEA,OACAyB,EANF,EAMEA,OAGF,OACE,uBAAMjC,UAAU,OAAhB,UACE,cAAC,EAAD,CACEW,UAAWmB,EAAWlC,MACtBc,QAAQ,cACRE,WAAYhB,EACZiB,UAAU,QACVC,cAAeyC,KAAKnB,kBACpBrB,cAAewC,KAAKb,kBACpB1B,kBAAmBuC,KAAKf,gBACxBvB,MAAOgB,EAAOrC,MACdsB,QAAQ,IAGV,cAAC,EAAD,CACEP,UAAWmB,EAAWjC,YACtBa,QAAQ,oBACRE,WAAYf,EACZgB,UAAU,cACVC,cAAeyC,KAAKnB,kBACpBrB,cAAewC,KAAKb,kBACpBzB,MAAOgB,EAAOpC,cAGhB,cAAC,EAAD,CACEc,UAAWmB,EAAWhC,OACtBY,QAAQ,gBACRE,WAAYd,EACZe,UAAU,YACVC,cAAeyC,KAAKnB,kBACpBrB,cAAewC,KAAKV,aACpB7B,kBAAmBuC,KAAKf,gBACxBvB,MAAOgB,EAAOnC,OACdqB,aA5HQ,uCA6HRD,QAAM,IAGR,cAAC,EAAD,CACEP,UAAWmB,EAAW/B,QACtBW,QAAQ,iBACRE,WAAYb,EACZc,UAAU,WACVC,cAAeyC,KAAKnB,kBACpBrB,cAAewC,KAAKV,aACpB7B,kBAAmBuC,KAAKf,gBACxBvB,MAAOgB,EAAOlC,QACdoB,aAxIO,wBAyIPD,QAAM,IAGR,cAAC,EAAD,CACEP,UAAWmB,EAAWtB,OACtBE,QAAQ,gBACRE,WAAYJ,EACZK,UAAU,UACVC,cAAeyC,KAAKnB,kBACpBrB,cAAewC,KAAKb,kBACpB1B,kBAAmBuC,KAAKf,gBACxBvB,MAAOgB,EAAOzB,OACdU,QAAQ,IAGV,wBACEG,KAAK,SACLC,QAAS,WACP,EAAKkC,MAAMC,MAAM,CACf7D,QACAC,cACAC,SACAC,UACAS,WAEF,EAAK+B,SAASP,IAEhB0B,SAAUH,KAAKP,iBAZjB,wBAvIR,GAA8BW,a,QCvCjBC,EAAb,4MACEzB,MAAe,CACb9B,OAAQwD,GAFZ,EAKEC,SAAW,SAACvD,GACV,EAAKgC,UAAS,SAAAJ,GACZ,MAAO,CACL9B,OAAO,GAAD,mBACD8B,EAAM9B,QADL,CAEJE,SAVV,4CAgBE,WACE,IAAQF,EAAWkD,KAAKpB,MAAhB9B,OAER,OACE,sBAAKL,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYK,OAAQA,MAEtB,qBAAKL,UAAU,UAAf,SACE,cAAC,EAAD,CAAUyD,MAAOF,KAAKO,oBAzBhC,GAAyBC,IAAMJ,WCN/BK,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b4e7a42c.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = Movie;\n\nexport const MovieCard: React.FC<Props> = ({\n  title, description, imgUrl, imdbUrl,\n}) => (\n  <div className=\"card\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          src={imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\">{title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\">\n        {description}\n        <br />\n        <a href={imdbUrl}>IMDB</a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard key={movie.imdbId} {...movie} />\n    ))}\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TypeChangeEventHandler = (event: React.ChangeEvent<HTMLInputElement>) => void;\n\ntype Props = {\n  fieldId: string,\n  fieldName: string,\n  fieldValue: string,\n  labelText: string,\n  onInputChange: TypeChangeEventHandler;\n  validateField: TypeChangeEventHandler;\n  onSetSpecialValue: (field: string, value: string) => void;\n  error: boolean,\n  isLink: boolean,\n  specialValue?: string,\n};\n\nexport const TextInput: React.FC<Props> = ({\n  fieldId,\n  fieldName,\n  fieldValue,\n  labelText,\n  onInputChange,\n  validateField,\n  onSetSpecialValue,\n  error,\n  isLink,\n  specialValue = '',\n}) => {\n  return (\n    <label\n      htmlFor={fieldId}\n      className=\"form__input\"\n    >\n      <span className=\"form__label-text\">\n        {labelText}\n      </span>\n      {isLink && (\n        <button\n          type=\"button\"\n          onClick={() => {\n            onSetSpecialValue(fieldName, specialValue);\n          }}\n        >\n          Use Placeholder URL\n        </button>\n      )}\n      <input\n        id={fieldId}\n        type=\"text\"\n        name={fieldName}\n        className={classNames(\n          'form__input-field',\n          { 'form__input-field--invalid': error },\n        )}\n        onChange={onInputChange}\n        value={fieldValue}\n        onBlur={validateField}\n      />\n      <br />\n      {isLink\n        ? (error && 'Must be a link')\n        : (error && 'Required field')}\n    </label>\n  );\n};\n\nTextInput.defaultProps = {\n  specialValue: '',\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype Props = {\n  fieldId: string,\n  fieldName: string,\n  fieldValue: string,\n  labelText: string,\n  onInputChange: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  validateField: (event: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  error: boolean,\n};\n\nexport const TextAreaInput: React.FC<Props> = ({\n  fieldId,\n  fieldName,\n  fieldValue,\n  labelText,\n  onInputChange,\n  validateField,\n  error,\n}) => {\n  return (\n    <label\n      htmlFor={fieldId}\n      className=\"form__input\"\n    >\n      <span className=\"form__label-text\">\n        {labelText}\n      </span>\n      <textarea\n        id={fieldId}\n        name={fieldName}\n        className={classNames(\n          'form__input-field',\n          { 'form__input-field--invalid': error },\n        )}\n        value={fieldValue}\n        onChange={onInputChange}\n        onBlur={validateField}\n      />\n      <br />\n      {error && 'Required field'}\n    </label>\n  );\n};\n","import React, { Component } from 'react';\nimport './NewMovie.scss';\nimport { TextInput } from '../TextInput';\nimport { TextAreaInput } from '../TextAreaInput';\n\ntype Props = {\n  onAdd: (movie: Movie) => void,\n};\ntype State = {\n  title: string,\n  description: string,\n  imgUrl: string,\n  imdbUrl: string,\n  imdbId: string,\n  errors: {\n    title: boolean,\n    description: boolean,\n    imgUrl: boolean,\n    imdbUrl: boolean,\n    imdbId: boolean,\n  },\n};\ntype InputEvents = React.ChangeEvent<HTMLInputElement> | React.ChangeEvent<HTMLTextAreaElement>;\nenum FieldNames {\n  title = 'title',\n  description = 'description',\n  imgUrl = 'imgUrl',\n  imdbUrl = 'imdbUrl',\n  imdbId = 'imdbId',\n}\n\nconst IMAGE_URL = 'https://via.placeholder.com/600x1000';\nconst IMDB_URL = 'https://www.imdb.com/';\n\nconst defaultState = {\n  title: '',\n  description: '',\n  imgUrl: '',\n  imdbUrl: '',\n  imdbId: '',\n  errors: {\n    title: false,\n    description: false,\n    imgUrl: false,\n    imdbUrl: false,\n    imdbId: false,\n  },\n};\n\nexport class NewMovie extends Component<Props, State> {\n  state: State = defaultState;\n\n  handleInputChange = (event: InputEvents) => {\n    const { name, value } = event.target;\n\n    this.setState(state => {\n      return {\n        ...state,\n        [name]: value,\n      };\n    });\n  };\n\n  setSpecialValue = (field: string, value: string) => {\n    this.setState(state => ({\n      ...state,\n      [field]: value,\n      errors: {\n        ...state.errors,\n        [field]: false,\n      },\n    }));\n  };\n\n  validateTextInput = (event: InputEvents) => {\n    const { name, value } = event.target;\n    const valueWithoutSpaces = value.replace(/\\s/g, '');\n\n    this.setState(state => {\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          [name]: valueWithoutSpaces === '',\n        },\n      };\n    });\n  };\n\n  validateLink = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    const valueIsNotLink = !value.match(/^((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=+$,\\w]+@)?[A-Za-z0-9.-]+|(?:www\\.|[-;:&=+$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[+~%/.\\w-_]*)?\\??(?:[-+=&;%@.\\w_]*)#?(?:[.!/\\\\\\w]*))?)$/);\n\n    this.setState(state => {\n      return {\n        ...state,\n        errors: {\n          ...state.errors,\n          [name]: valueIsNotLink,\n        },\n      };\n    });\n  };\n\n  isFormComplete = () => {\n    const fields = Object.values(this.state).filter(value => typeof value === 'string');\n    const hasEmptyFields = fields.some(field => field === '');\n    const hasErrors = Object.values(this.state.errors).some(error => error);\n\n    return hasEmptyFields || hasErrors;\n  };\n\n  render() {\n    const {\n      title,\n      description,\n      imgUrl,\n      imdbUrl,\n      imdbId,\n      errors,\n    } = this.state;\n\n    return (\n      <form className=\"form\">\n        <TextInput\n          fieldName={FieldNames.title}\n          fieldId=\"title-input\"\n          fieldValue={title}\n          labelText=\"Title\"\n          onInputChange={this.handleInputChange}\n          validateField={this.validateTextInput}\n          onSetSpecialValue={this.setSpecialValue}\n          error={errors.title}\n          isLink={false}\n        />\n\n        <TextAreaInput\n          fieldName={FieldNames.description}\n          fieldId=\"description-input\"\n          fieldValue={description}\n          labelText=\"Description\"\n          onInputChange={this.handleInputChange}\n          validateField={this.validateTextInput}\n          error={errors.description}\n        />\n\n        <TextInput\n          fieldName={FieldNames.imgUrl}\n          fieldId=\"img-url-input\"\n          fieldValue={imgUrl}\n          labelText=\"Image URL\"\n          onInputChange={this.handleInputChange}\n          validateField={this.validateLink}\n          onSetSpecialValue={this.setSpecialValue}\n          error={errors.imgUrl}\n          specialValue={IMAGE_URL}\n          isLink\n        />\n\n        <TextInput\n          fieldName={FieldNames.imdbUrl}\n          fieldId=\"imdb-url-input\"\n          fieldValue={imdbUrl}\n          labelText=\"IMDB URL\"\n          onInputChange={this.handleInputChange}\n          validateField={this.validateLink}\n          onSetSpecialValue={this.setSpecialValue}\n          error={errors.imdbUrl}\n          specialValue={IMDB_URL}\n          isLink\n        />\n\n        <TextInput\n          fieldName={FieldNames.imdbId}\n          fieldId=\"imdb-id-input\"\n          fieldValue={imdbId}\n          labelText=\"IMDB ID\"\n          onInputChange={this.handleInputChange}\n          validateField={this.validateTextInput}\n          onSetSpecialValue={this.setSpecialValue}\n          error={errors.imdbId}\n          isLink={false}\n        />\n\n        <button\n          type=\"button\"\n          onClick={() => {\n            this.props.onAdd({\n              title,\n              description,\n              imgUrl,\n              imdbUrl,\n              imdbId,\n            });\n            this.setState(defaultState);\n          }}\n          disabled={this.isFormComplete()}\n        >\n          ADD\n        </button>\n      </form>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { NewMovie } from './components/NewMovie';\nimport moviesFromServer from './api/movies.json';\n\ninterface State {\n  movies: Movie[];\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    movies: moviesFromServer,\n  };\n\n  addMovie = (movie: Movie) => {\n    this.setState(state => {\n      return {\n        movies: [\n          ...state.movies,\n          movie,\n        ],\n      };\n    });\n  };\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <NewMovie onAdd={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}